<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>aperture</artifactId>
		<groupId>oculus.aperture</groupId>
		<version>1.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>aperture-client</artifactId>
	<packaging>jar</packaging>

	<name>Aperture Client</name>
	<description>Client-side javascript libraries for Aperture</description>
	<url>http://aperturejs.com</url>

	<licenses>
		<license>
			<name>The MIT License (MIT)</name>
			<url>http://opensource.org/licenses/MIT</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/oculusinfo/aperturejs</url>
		<connection>scm:git:https://github.com/oculusinfo/aperturejs.git</connection>
	</scm>

	<profiles>
		<profile>
			<id>unsigned install</id>
			<activation>
				<property>
					<name>!aperture.deployment.signed</name>
				</property>
			</activation>
			<properties>
				<jarsigner.skip>true</jarsigner.skip>
			</properties>
		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/javascript</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<!-- Filter resources to processed-scripts folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<outputDirectory>${project.build.directory}/processed-scripts/</outputDirectory>
				</configuration>
			</plugin>

			<!-- JSLint - run manually with jslint4java:lint -->
			<plugin>
				<groupId>com.googlecode.jslint4java</groupId>
				<artifactId>jslint4java-maven-plugin</artifactId>
				<version>2.0.0</version>
				<configuration>
					<defaultSourceFolder>src/main/javascript</defaultSourceFolder>
					<failOnError>false</failOnError>
					<options>
						<maxerr>100</maxerr>
						<undef>true</undef>
						<white>true</white>
						<vars>true</vars>
						<sub>true</sub>
						<sloppy>true</sloppy>
						<plusplus>true</plusplus>
						<nomen>true</nomen>	<!-- Allows _ -->
						<regexp>true</regexp>
						<eqeq>true</eqeq>
						<confusion>true</confusion>
						<continue>true</continue>
						<newcap>true</newcap>
						<passfail>false</passfail>
					</options>
					<excludes>
						<param>pre.js</param>
						<param>pre-package.js</param>
						<param>post.js</param>
						<param>util.js</param>
					</excludes>
				</configuration>
			</plugin>

			<!-- Combine all Javascript source files (from processed-scripts) into a single file -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<!-- Combine into single file -->
					<execution>
						<id>compile-js</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>

						<configuration>
							<target>
								<concat	destfile="${project.build.directory}/processed-packages/aperture-core.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="base.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="util.js" />

									<!-- Put class first so the rest of the API can use it -->
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-classes/Class.js" />

									<!-- Then config, then log, so things can initialize and start problem reporting -->
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-packages/config.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-packages/log.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-packages/canvas.js" />

									<!-- Base classes -->
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-classes/Transition.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-classes/Layer.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-packages/vizlet.js" />

									<!-- Then other classes -->
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-classes/*.js">
										<!-- Already included, exclude here -->
										<exclude name="core-classes/Class.js"/>
										<exclude name="core-classes/Layer.js"/>
									</fileset>

									<!-- Then apis -->
									<fileset dir="${project.build.directory}/processed-scripts" includes="core-packages/*.js">
										<!-- Already included, exclude here -->
										<exclude name="core-packages/config.js"/>
										<exclude name="core-packages/log.js"/>
										<exclude name="core-packages/canvas.js"/>
										<exclude name="core-packages/vizlet.js" />
									</fileset>
								</concat>

								<!-- Create a single JS file for the package of log implementations -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-log.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/log/**" />
								</concat>

								<!-- Create a single JS file for the capture api -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-capture.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/capture.js" />
								</concat>

								<!-- Create a single JS file for the graph api -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-graph.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/graph.js" />
								</concat>

								<!-- Create a single JS file for the layout api -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-layout.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/layout.js" />
								</concat>

								<!-- Create a single JS file for the pubsub implementation -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-pubsub.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/pubsub.js" />
								</concat>

								<!-- Create a single JS file for the cms api -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-cms.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/store.js" />
								</concat>

								<!-- Create a single JS file for OpenLayers 2 integation and legacy map vizlet -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-geo.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/geo/openLayers2.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/geo/openLayers3.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/geo/legacyMap.js" />
								</concat>

								<!-- Create a single JS file for the new chart vizlet -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-chart.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/chart/**" />
								</concat>

								<!-- Create a single JS file for the raphael canvas -->
								<concat	destfile="${project.build.directory}/processed-packages/aperture-raphael.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="packages/canvas/RaphaelCanvas.js" />
								</concat>

								<!-- MODULES -->
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-core.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-core.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-log.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-log.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-capture.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-capture.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-graph.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-graph.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-layout.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-layout.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-pubsub.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-pubsub.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-cms.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-cms.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-geo.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-geo.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-chart.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-chart.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>
								<concat	destfile="${project.build.outputDirectory}/aperture-packages/aperture-raphael.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre-package.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-raphael.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>

								<!-- ALL IN ONE -->
								<concat	destfile="${project.build.outputDirectory}/aperture.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="header.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="pre.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-core.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-log.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-capture.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-graph.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-layout.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-pubsub.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-cms.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-geo.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-chart.js" />
									<fileset dir="${project.build.directory}/processed-packages" includes="aperture-raphael.js" />
									<fileset dir="${project.build.directory}/processed-scripts" includes="post.js" />
								</concat>

								<!-- and example config -->
								<concat	destfile="${project.build.outputDirectory}/aperture-exampleconfig.js">
									<fileset dir="${project.build.directory}/processed-scripts" includes="aperture-exampleconfig.js" />
								</concat>

							</target>
						</configuration>
					</execution>

					<!-- Combine into single file -->
					<execution>
						<id>compile-jsdoc</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<java jar="lib/jsdoc-toolkit/jsrun.jar" fork="true" failonerror="true" maxmemory="256m">
									<arg value="lib/jsdoc-toolkit/app/run.js" />
									<arg value="-d=target/api/js/" />
									<arg value="-t=lib/jsdoc-toolkit/templates/aperture" />
									<arg value="-v" />
									<arg value="-m" />
									<arg value="-r=3" />
									<arg value="-E=&quot;(pre|pre-package|post)\.js&quot;" />
									<arg value="-E=raphael-group.js" />
									<arg value="-E=tooltip.js" />
									<arg value="-E=esri.js" />
									<arg value="-E=TableLayer.js" />
									<arg value="-E=header.js" />
									<arg value="-E=aperture-exampleconfig.js" />
									<arg value="${project.build.directory}/processed-scripts" />
									<arg value="-D=noGlobal:true" />
									<arg value="-D=title:Aperture JS API" />
								</java>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>compile-jsdoc-dev</id>
						<!-- >phase>compile</phase -->
						<phase>none</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<java jar="lib/jsdoc-toolkit/jsrun.jar" fork="true" failonerror="true" maxmemory="256m">
									<arg value="lib/jsdoc-toolkit/app/run.js" />
									<arg value="-d=target/api/jsext/" />
									<arg value="-t=lib/jsdoc-toolkit/templates/aperture" />
									<arg value="-v" />
									<arg value="-m" />
									<arg value="-r=3" />
									<arg value="-E=&quot;(pre|pre-package|post)\.js&quot;" />
									<arg value="-E=raphael-group.js" />
									<arg value="-E=tooltip.js" />
									<arg value="-E=esri.js" />
									<arg value="-E=TableLayer.js" />
									<arg value="-E=header.js" />
									<arg value="-E=aperture-exampleconfig.js" />
									<arg value="${project.build.directory}/processed-dev-scripts" />
									<arg value="-D=noGlobal:true" />
									<arg value="-D=title:Aperture JS API" />
								</java>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>compile-jsdoc</id>
						<phase>compile</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<filters>
								<filter>${project.build.scriptSourceDirectory}/user.properties</filter>
							</filters>
							<outputDirectory>${project.build.directory}/processed-scripts/</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>compile-jsdoc-dev</id>
						<!-- >phase>compile</phase -->
						<phase>none</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<filters>
								<filter>${project.build.scriptSourceDirectory}/dev.properties</filter>
							</filters>
							<outputDirectory>${project.build.directory}/processed-dev-scripts/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Generate jsdoc .zip artifact -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.2</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/jsdoc.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>package-jsdoc</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- Jetty server for running qunit tests -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>7.2.0.v20101020</version>
				<configuration>
					<reload>manual</reload>
					<webAppConfig>
						<contextPath>/</contextPath>
						<baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
							<resourcesAsCSV>src/main/javascript,src/test/javascript</resourcesAsCSV>
						</baseResource>
					</webAppConfig>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-server</artifactId>
						<version>7.2.0.v20101020</version>
					</dependency>
				</dependencies>
			</plugin>


			<!--sign if -Daperture.deployment.signed=true-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<id>sign</id>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.6,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
